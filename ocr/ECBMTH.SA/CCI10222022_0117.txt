PAGE  003  ECBMTH  .SA:1  MATH P FLOATING POINT MATH PACKAGE CONFIGURATION.

00774
00775                             TIL    FLOATING POINT ADDITION AND SUBTRACTION.
00776                             XDEF   FADDH
00777P 0000 8E   0571    P FADDH  LDX    #FHALF   ENTRY TO ADD 1/2.
00778P 0003 20   09   000E        BRA    FADD     UNPACK AND GO ADD UIT.
00779                             XDEF   FSUB
00780P 0005 BD   01DD    P FSUB   JSR    CONUPK   UNPACK ARGUMENT INTO ARG.
00781                             XDEF   FSUBT
00782P 0008 03   54      A FSUBT  COM    FACSGN   COMPLEMENT THE FAC.
00783P 000A 03   62      A        COM    ARISGN   STATE OF SAMENESS IS NEGATED.
00784P 000C 20   03   0011        BRA    FADDT
00785                             XDEF   FADD
00786P 000E BD   01DD    P FADD   JSR    CONUPK
00787                             XDEF   FADDT
00788P 0011 5D             FADDT  TSTB            IF FAC=0, RESULT IS IN ARG.
00789P 0012 1027 02E2 02F8        LBEQ   MOVFA
00790P 0016 8E   005C    A        LDX    #ARGEXP  DEFAULT IS SHIFT ARGUMENT.
00791P 0019 1F   89      A FADDC  TFR    A,B      IF ARG=0, FAC IS RESULT.
00792P 001B 5D                    TSTB            ALSO COPY ACCA INTO ACCB.
00793P 001C 27   6C   008A        BEQ    ZERRTS   RETURN.
00794P 001E D0   4F      A        SUBB   FACEXP
00795P 0020 27   69   008B        BEQ    FADD5    NO SHIFTING.
00796P 0022 25   0A   002E        BCS    FADD1    BR IF ARGEXP.LT.FACEXP.
00797P 0024 97   4F      A        STA    FACEXP   RESULTING EXPONENT.
00798P 0026 96   61      A        LDA    ARGSGN   SINCE ARG IS BIGGER, IT'S
00799P 0028 97   54      A        STA    FACSGN   SIGN IS SIGN OF RESULT.
00800P 002A 8E   004F    A        LDX    #FAC     SHIFT THE FAC INSTEAD.
00801P 002D 50                    NEGB            SHIFT A NEGATIVE NUMBER OF PLACES.
00802P 002E C1   F8      A FADD1  CMPB   #-@10    FOR SPEED AND NECESSITY.  GETS
00803                      *    MOST LIKELY CASE TO SHIFTR FASTEST
00804                      *    AND ALLOWS SHIFTING OF NEG NUMS
00805                      *    BY "QINT".
00806P 0030 2F   59   008B        BLE    FADD5    SHIFT BIG.
00807P 0032 4F                    CLRA            ZERO FACOV.
00808P 0033 64   01      A        LSR    @1,X     GETS 0 IN MOST SIG BIT.
00809P 0035 BD   0106    P        JSR    ROLSHF   DO THE ROLLING.
00810P 0038 D6   62      A FADD4  LDB    ARISGN   GET RESULTING SIGN.
00811P 003A 2A   0B   0047        BPL    FADD2    IF POSITIVE, ADD.
00812                      *    CARRY IS CLEAR.
00813P 003C 63   01      A FADD3  COM    @1,X     OTHERWISE SUBTRACT.
00814P 003E 63   02      A        COM    @2,X     ALWAYS COMPLEMENT SMALLER ONE, SO
00815P 0040 63   03      A        COM    @3,X     THERE WILL BE NO CALL TO NEGFAC.
00816            0001    A        IFNE   ADDPRC
00817P 0042 63   04      A        COM    @4,X
00818                             ENDC   IFN      ADDPRC
00819P 0044 43                    COMA
00820P 0045 89   00      A        ADCA   #@0      INCREMENT RESULT AND CARRY THRU.
00821P 0047 97   63      A FADD2  STA    FACOV
00822P 0049 96   53      A        LDA    FACLO
00823P 004B 99   60      A        ADCA   ARGLO
00824P 004D 97   53      A        STA    FACLO
00825P 004F 96   52      A        LDA    FACMO
00826P 0051 99   5F      A        ADCA   ARGMO
00827P 0053 97   52      A        STA    FACMO
00828            0001    A        IFNE   ADDPRC
00829P 0055 96   51      A        LDA    FACMOH
00830P 0057 99   5E      A        ADCA   ARGMOH
00831P 0059 97   51      A        STA    FACMOH
