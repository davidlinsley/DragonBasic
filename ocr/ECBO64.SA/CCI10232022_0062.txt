PAGE  005  ECBO64  .SA:1  IODRVR I/O DRIVER SUBROUTINES

00233P 00A7 7D   0149    A        TST    ALLOCK
00234P 00AA 26   0D   00B9        BNE    CODED    IF ON THEN UPPER CASE OK
00235P 00AC 8A   20      A        ORA    #$20     ELSE CONVERT TO LOWER CASE
00236P 00AE 20   09   00B9        BRA    CODED    BEFORE EXIT
00237                      * NUMERIC (+ OTHERS) ENCODED HERE
00238P 00B0 8B   30      A NUMKEY ADDA   #$30     CONVERT TO ASCII
00239P 00B2 17   FF76 002B        LBSR   CSHIFT   CHECK SHIFT KEY
00240P 00B5 26   02   00B9        BNE    CODED    UNSHIFTED - NO CHANGE
00241P 00B7 80   10      A        SUBA   #$10     ELSE CONVERT YO UPPER SET
00242P 00B9 81   12      A CODED  CMPA   #SHIFT0  CHECK FOR ALPHA LOCK TOGGLE
00243P 00BB 26   04   00C1        BNE    POLEND
00244P 00BD 73   0149    A        COM    ALLOCK   TOGGLE IF FOUND
00245P 00C0 4F             NONKEY CLRA            NO KEY CLOSURE EXIT CONDITION
00246P 00C1 35   90      A POLEND PULS   X,PC     TIDY UP WORKSPACE AND RETURN
00247                      * SPECIAL CASES FOLLOW
00248P 00C3 80   1A      A SPEC2  SUBA   #26      MAKE SPECIAL CASES CONTIGUOUS
00249P 00C5 80   0B      A SPEC1  SUDA   #11      AND OFFSET IN RANGE 1 ->
00250P 00C7 48             KEY0   ASLA            2 ENTRIES/KEY
00251P 00C8 17   FF60 002B        LBSR   CSHIFT   CHECK FOR SHIFTED SET
00252P 00CB 26   01   00CE        BNE    LOOKUP
00253P 00CD 4C                    INCA            SHIFTED SET ENTRY OFFSET
00254P 00CE 8E   00D5    P LOOKUP LDX    #KEYTAB  SET UP LOOKUP TABLE BASE
00255P 00D1 A6   86      A        LDA    A,X      LOOKUP KEY ENTRY
00256P 00D3 20   E4   00B9        BRA    CODED    AND RETURN IT
00257                      * KEY CODE LOOKUP TABLE FOLLOWS
00258                      * SECOND ENTRY OF EACH IS THE SHIFTED KEY
00259P 00D5      30      A KEYTAB FCB    '0,SHIFT0
00260P 00D7      2C      A        FCB    ',,'<
00261P 00D9      2D      A        FCB    '-,'=
00262P 00DB      2E      A        FCB    '.,'>
00263P 00DD      2F      A        FCB    '/,'?
00264P 00DF      40      A        FCB    '@,$13
00265P 00E1      5E      A        FCB    $5E,$5F  UP ARROW
00266P 00E3      0A      A        FCB    LF,$5B   DOWN ARROW
00267P 00E5      08      A        FCB    BS,$15   LEFT ARROW
00268P 00E7      09      A        FCB    $09,$5D  RIGHT ARROW
00269P 00E9      20      A        FCB    SP,SP    SPACE
00270P 00EB      0D      A        FCB    CR,CR    ENTER
00271P 00ED      0C      A        FCB    $0C,$5C  CLEAR
00272P 00EF      03      A        FCB    $03,$03  BREAK
00273                      *
00274                      * SCREEN OUTPUT ROUTINES FOLLOW
00275                      *
00278                      * CLREOL - CLEARS THE SCREEN TO THE END OF THE CURRENT LINE
00277                      *
00278P 00F1 86   60      A CLREOL LDA    #INVSP   FILL REST OF THE LINE
00279P 00F3 A7   80      A        STA    0,X+     SPACES WRITTEN TO VRAM
00280P 00F5 1F   10      A        TFR    X,D      NOW CHECK FOR EOL
00281P 00F7 C4   1F      A        ANDB   #$1F     BY ANDING WITH LINE LENGTH
00282P 00F9 26   F6   00F1        BNE    CLREOL   REPEATS UNTIL COL 32
00283P 00FB 39                    RTS
00284                      *
00285                      * SCROUT - OUTPUTS A CHARACTER TO THE SCREEN
00286                      *
00287                             XDEF   ZSCROU
00288            00FC    P ZSCROU EOU    *
00289P 00FC 34   16      A SCROUT PSHS   A,B,X    SAVE REGS
00290P 00FE 9E   88      A        LDX    CURADR   FETCH CURSOR POSITION
