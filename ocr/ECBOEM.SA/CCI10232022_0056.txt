PAGE  015  ECBOEM  .SA:1  IODRVR I/O DRIVER SUBROUTINES

00813P 0417 8E   0425    P        LDX    #LOADER  COPY LOADER
00814P 041A CE   01DA    A        LDU    #CASBUF  INTO CASSETTE BUFFER
00815P 041D C6   8F      A        LDB    #ENDLOD -LOADER NUMBER OF BYTES TO COPY
00816P 041F 17   FC40 0062        LBSR   NZCOPY   USEING NZCOPY
00817P 0422 7E   01DA    A        JMP    CASBUF   AND AUTOSTART
00818                      * LOADER LOADS BASIC
00819P 0425 B6   011A    A LOADER LDA    FLAG64   HAS IT BEEN COPIED BEFORE
00820P 0428 81   55      A        CMPA   #$55
00821P 042A 26   16   0442        BNE    UPLOAD   NO.  THEN UPLOAD IT
00822                      * AT THIS POINT BASIC HAS BEEN COPIED ALREADY
00823                      * BUT NEED TO CHECK CHECKSUM TO SEE IF INTACT
00824P 042C B7   FFDF    A        STA    SAMTYS   MAP TYPE 1
00825P 042F 8E   C000    A        LDX    #$C000   BASE ADDRESS OF 48K BASIC
00826P 0432 CC   0000    A        LDD    #0
00827P 0435 E3   81      A LPADD  ADDD   ,X++     PERFORM CHECKSUM
00828P 0437 8C   FF00    A        CMPX   #$FF00   FINISHED ?
00829P 043A 25   F9   0435        BLO    LPADD
00830P 043C 10B3 011B    A        CMPD   CSUM64
00831P 0440 27   6F   04B1        BEQ    WARSTR   INTO BASIC IF SO
00832                      * NOW COPY BASIC ACROSS
00833P 0442 B7   FFDE    A UPLOAD STA    SAMTYC   MAP 0
00834P 0445 B6   FF23    A        LDA    P1CRB
00835P 0448 84   FB      A        ANDA   #$FB     SELECT DD REG
00836P 044A B7   FF23    A        STA    P1CRB
00837P 044D F6   FF22    A        LDB    P1DDRB   READ  DD REG
00838P 0450 CA   04      a        ORB    #4       PB2=OUTPUT
00839P 0452 F7   FF22    A        STB    P1DDRB
00840P 0455 8A   04      A        ORA    #4
00841P 0457 B7   FF23    A        STA    P1CRB    DESELECT DD REG
00842P 045A B6   FF22    A        LDA    P1PDRB   READ DATA REG`
00843P 045D 84   FB      A        ANDA   #$FB     PB2 OUPUT=LO THUS
00844P 045F B7   FF22    A        STA    P1PDRB   ...SELECT ROM 2
00845P 0462 FE   BFF0    A        LDU    $BFF0    LOOK FOR 64K FLAG
00846P 0465 1183 3634    A        CMPU   #'6*$100+'4
00847P 0469 27   08   0473        BEQ    BOOTIT
00848P 046B 8A   04      A        ORA    #$04     PUT ROM SELECT BACK
00849P 046D B7   FF22    A        STA    P1PDRB   ...SELECT ROM 1
00850P 0470 7E   0000    A        JMP    FCERR
00851P 0473 7F   011B    A BOOTIT CLR    CSUM64   CLEAR CHECKSUM
00852P 0476 7F   011C    A        CLR    CSUM64+1
00853P 0479 8E   8000    A        LDX    #$8000   ROM START ADRESS
00854P 047C 108E C000    A        LDY    #$C000   START OF BASIC IN RAM
00855P 0480 EC   81      A NXTBYT LDD    ,X++     DATA FROM ROM
00856P 0482 B7   FFDF    A        STA    SAMTYS   MAP TYPE 1
00857P 0485 ED   A1      A        STD    ,Y++
00858P 0487 F3   011B    A        ADDD   CSUM64
00859P 048A FD   011B    A        STD    CSUM64   UPDATE CHECKSUM
00860P 048D 108C FF00    A        CMPY   #$FF00   COPIED ALL ?
00861P 0491 24   05   0498        BHS    RAMCPD   BRANCH IF SO
00862P 0493 B7   FFDE    A        STA    SAMTYC   MAP TYPE 0
00863P 0496 20   E8   0480        BRA    NXTBYT
00864                      *  NOW INITIALISE POINTERS
00865P 0498 8E   BFF0    A RAMCPD LDX    #$BFF0
00866P 049B 9F   74      A        STX    ENDMEM
00867P 049D 9F   27      A        STX    MEMSIZ
00868P 049F 9F   23      A        STX    FRETOP
00869P 04A1 30   89 FF38 A        LEAX   -STRSPC,X
00870P 04A5 9F   21      A        STX    STKTOP
