PAGE  001  ECBCOM  .SA:0  TXRPU  Extension ROM Direct Page RAM

00700                             OPT    L,LLE=120
00701                             NAM    TXRPU    - PRINT USING for TCC Extension ROM.
00702
00703                      **********************************************************************
00704                      *                                                                    *
00705                      *    Copyright 1982 by Microsoft Corporation, all rights reserved    *
00706                      *                                                                    *
00707                      **********************************************************************
00708
00709                             TTL    External Declarations
00710
00711                             XREF   CHKCOM,CHKSTR,CHROUT,CRDO
00712                             XREF   DIV10
00713                             XREF   FADDH,FBUFFR,FCERR,FDCEND,FMULT,FOUT,FOUTBL,FOUTCP,FRETMP
00714                             XREF   FRMCHK,FRMEVL,FRMNUM
00715                             XREF   LEFTUS
00716                             XREF   MUL10
00717                             XREF   N.0999,N.9999,N.MIL
00718                             XREF   OUTSPC
00719                             XREF   QINT
00720                             XREF   STROUT,STRPRT,SYNCHR
00721                             XREF   USINTK
00722
00723                             TTL    Equates
00724
00725                      *
00726                      * The PRINT USING mask (PUMASK) bit definitions.
00727                      *
00728
00729            0001    A SCIFLG EQU    &1       Bit 0 - Scientific notation.
00730            0004    A TRLFLG EQU    &4       Bit 2 - Trailing sign.
00731            0008    A PLSFLG EQU    @10      Bit 3 - Print "+" instead of space
00732                      *      for positive numbers.
00733            0010    A DOLFLG EQU    @20      Bit 4 - Floating dollar sign.
00734            0020    A ASTFLG EQU    @40      Bit 5 - Asterisk fill.
00735            0040    A COMFLG EQU    @100     Bit 6 - Insert commas.
00736
00737            0024    A FLTMON EQU    '$       Character to use for floating money
00738                      *    sign. Can be changed to a yen sign
00739                      *    for example.
00740            0025    A MLCSTR EQU    '%       Character indicating a multi-char
00741                      *   string field. (For compatibility
00742                      *   with TRS-80 Model I Level II BASIC.
00743
00744                             TTL    The PRINT USING driver.
00745
00746                      *
00747                      * Entered at PUTEST.
00748                      *
00749
00750                      *
00751                      * Here to handle a string field.
00752                      *
00753
00754P 0000 86   01      A SMSTRF LDA    #&1      Single char string field.
00755P 0002 97   D9      A        STA    FLDWID
00756P 0004 5A             ISSTRF DECB            Decrement using string char count.
00757P 0005 BD   019A    P        JSR    PLSPRT   Print possible preceding plus.

PAGE  002  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00758P 0008 9D   A5      A        JSR    CHRGOT   End of value list reached?
00759P 000A 1027 008C 009A        LBEQ   FLDFIN   Yes, PRINT USING is finished.
00760P 000E D7   D3      A        STB    USSCNT   No, save using string char count.
00761P 0010 BD   0000    A        JSR    FRMEVL   Evaluate next value in the value list.
00762P 0013 BD   0000    A        JSR    CHKSTR   It must be a string to go into this
00763                      *    string field.
00764P 0016 9E   52      A        LDX    FACMO    X:=pointer to the string descriptor.
00765P 0018 9F   4D      A        STX    DSCPNT   Set up DSCPNT for LEFT$ code.
00766P 001A D6   D9      A        LDB    FLDWID   B:=width of string field.
00767P 001C BD   0000    A        JSR    LEFTUS   Get leftmost B chars or whole string
00768                      *    if it's shorter than the field.
00769P 001F BD   0000    A        JSR    STRPRT   Print the string.
00770P 0022 9E   52      A        LDX    FACMO    See if spaces are needed to fill out
00771P 0024 D6   D9      A        LDS    FLDWID   the field.
00772P 0026 E0   84      A        SUBB   ,X
00773P 0028 5A             UPRTSP DECB            More spaces to print?
00774P 0029 102B 0148 0175        LBMI   FNSTRF   No, string field is finished.
00775P 002D BD   0000    A        JSR    OUTSPC   Yes, print another one.
00776P 0030 20   F6   0028        BRA    UPRTSP   See if more.

PAGE  003  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00778                      *
00779                      * Here when MLCSTR is seen which indicates the start of a multi-char
00780                      * string field if it is followed by a variable number of spaces and
00781                      * another MLCSTR.
00782                      *
00783
00784P 0032 D7   D3      A BGSTRF STB    USSCNT   Save the using string char count.
00785P 0034 9F   0F      A        STX    TEMPX1   Save the using string pointer.
00786P 0036 86   02      A        LDA    #&2      The field width is 2 for the MLCSTRs
00787P 0038 97   D9      A        STA    FLDWID   plus the number of enclosed spaces.
00788P 003A A6   84      A LPSTRF LDA    ,X       Get next using string char.
00789P 003C 81   25      A        CMPA   #MLCSTR  End of the string field?
00790P 003E 27   C4   0004        BEQ    ISSTRF   Yes, go print the string.
00791P 0040 81   20      A        CMPA   #'       No, an enclosed space?
00792P 0042 26   07   004B        BNE    NOSTRF   No, it isn't really a string field.
00793P 0044 0C   D9      A        INC    FLDWID   Yes, increment the field width.
00794P 0046 30   01      A        LEAX   &1,X     Point to the next using string char.
00795P 0048 5A                    DECB            Decrement using string char count.
00796P 0049 26   EF   003A        BNE    LPSTRF   Is there are more chars in the using
00797                      *    string then go scan them. Otherwise
00798                      *    the closing MLCSTR wasn't found and
00799                      *    therefore we aren't really looking
00800                      â€¢    at a string field.
00801P 004B 9E   0F      A NOSTRF LDX    TEMPX1   It isn't a string field so restore the
00802P 004D D6   D3      A        LDB    USSCNT   using string pointer and char count.
00803P 004F 86   25      A        LDA    #MLCSTR  Just print the MLCSTR since it doesn't
00804                      *    belong to a field.
00805P 0051 BD   019A    P NEWUCH JSR    PLSPRT   Print possible preceding plus since
00806                      *    it didn't start a numeric field.
00807P 0054 BD   0000    A        JSR    CHROUT   Now print the current char since it
00808                      *    isn't part of a field.
00809P 0057 20   22   007B        BRA    PRCCHR   Go look at the next using string char.

PAGE  004  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00811                      *
00812                      * The entry point of the PRINT USING driver.
00813                      *
00814
00815                             XDEF   PUDRVR
00816P 0059 BD   0000    A PUDRVR JSR    FRMCHK   Evaluate the using string.  FRMCHK
00817                      *    is called instead of FRMEVL because
00818                      *    TXTPTR is pointing to the USINTK
00819                      *    rather than the first char of the
00820                      *    string formula.
00821P 005C BD   0000    A        JSR    CHKSTR   Make sure it is a string.
00822P 005F C6   3B      A        LDB    #SEMCOL  It must be delimited by a semi-colon.
00823P 0061 BD   0000    A        JSR    SYNCHR
00824P 0064 9E   52      A        LDX    FACMO    A pointer to the descriptor of the
00825P 0066 9F   D5      A        STX    USDPTR   using string is saved because calls
00826                      *    to FRMEVL might cause garbage
00827                      *    collection to occur.
00828P 0068 20   06   0070        BRA    INIUS    Don't look at USLFG.
00829
00830P 006A 96   D7      A REUSST LDA    USFLG    Was a value from the value list
00831                      *    printed on the last scan of the using
00832                      *    string?
00833P 006C 27   08   0076        BEQ    PUFCER   If not give Function Call error.
00834P 006E 9E   D5      A        LDX    USDPTR   X:=pointer to using string descriptor.
00835P 0070 0F   D7      A INIUS  CLR    USFLG    Say no values printed this scan.
00836P 0072 E6   84      A        LDB    ,X       B:=length of using string.
00837P 0074 26   03   0079        BNE    NTNLUS   If the using string is null give a
00838P 0076 7E   0000    A PUFCER JMP    FCERR    Function Call error.
00839
00840P 0079 AE   02      A NTNLUS LDX    &2,X     X:=pointer to using string characters.
00841P 007B 0F   DA      A PRCCHR CLR    PUMASK   Turn off all print using flag bits.
00842P 007D 0F   D9      A PLSFIN CLR    FLDWID   Field width for strings:=0.  Number
00843                      *    of digits before decimal point for
00844                      *    numbers:=0.
00845P 007F A6   80      A        LDA    ,X+      A:=char from using string.
00846P 0081 81   21      A        CMPA   #'!      A single char string field?
00847P 0083 1027 FF79 0000        LBEQ   SMSTRF   Yes, go handle it.
00848P 0087 81   23      A        CMPA   #'#      Start of a numeric field?
00849P 0089 27   5B   00E6        BEQ    NUMNUM   Yes.
00850P 008B 5A                    DECB            No, all other possibilities require
00851                      *    at least two chars.
00852P 008C 26   16   00A4        BNE    TWOLFT   There are two chars.
00853P 008E BD   019A    P        JSR    PLSPRT   This isn't a field so print preceding
00854                      *    plus if there was one.
00855P 0091 BD   0000    A        JSR    CHROUT   Print the current char.
00856P 0094 9D   A5      A FINUSI JSR    CHRGOT   We have reached the end of the using
00857                      *    string.  Are there more values?
00858P 0096 26   D2   006A        BNE    REUSST   Yes, go reuse the using string.
00859P 0098 96   D7      A        LDA    USFLG    No, did the value list end with a
00860                      *    semicolon or comma?
00861P 009A 26   03   009F FLDFIN BNE    FREUST   Yes, don't do CRLF.
00862P 009C BD   0000    A        JSR    CRDO     No, finish up with a CRLF.
00863P 009F 9E   D5      A FREUST LDX    USDPTR   Free up the using string's temporary.
00864P 00A1 7E   0000    A        JMP    FRETMP   and return.

PAGE  005  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00866P 00A4 81   2B      A TWOLFT CMPA   #'+      If plus then force out possible pre-
00867P 00A6 26   09   00B1        BNE    NTPLUS   ceding plus and set the plus flag.
00868P 00A8 BD   019A    P        JSR    PLSPRT
00869P 00AB 86   08      A        LDA    #PLSFLG
00870P 00AD 97   DA      A        STA    PUMASK
00871P 00AF 20   CC   007D        BRA    PLSFIN   Go look at next char.
00872
00873P 00B1 81   2E      A NTPLUS CMPA   #'.      Numeric field with no digits before
00874P 00B3 27   4E   0103        BEQ    DOTNUM   the decimal point?
00875P 00B5 81   25      A        CMPA   #MLCSTR  A multi-char string field?
00876P 00B7 1027 FF77 0032        LBEQ   BGSTRF   Go scan it.
00877P 00BB A1   84      A        CMPA   ,X       Is the current char the same as the
00878                      *    next char?
00879P 00BD 26   92   0051 GONWUC BNE    NEWUCH   No, so it isn't "$$", "**", or "**$".
00880                      *    all other possiblilities have been
00881                      *    checked so the current char isn't
00882                      *    part of a field.
00883P 00BF 81   24      A        CMPA   #FLTMON  Yes, is the floating dollar sign?
00884P 00C1 27   19   00DC        BEQ    DOLRNM   Yes.
00885P 00C3 81   2A      A        CMPA   #'*      No, how about asterisk fill or aster-
00886                      *    isk fill with floating dollar sign?
00887P 00C5 26   F6   00BD        BNE    GONWUC   No, it isn't a field.
00888P 00C7 96   DA      A        LDA    PUMASK   Set the asterisk fill flag.
00889P 00C9 8A   20      A        ORA    #ASTFLG
00890P 00CB 97   DA      A        STA    PUMASK
00891P 00CD C1   02      A        CMPB   #&2      Are there enough chars for "**$"?
00892P 00CF 25   11   00E2        BCS    NTBOTH   No.
00893P 00D1 A6   01      A        LDA    &1,X     Yes, check for the "$".
00894P 00D3 81   24      A        CMPA   #FLTMON
00895P 00D5 26   0B   00E2        BNE    NTBOTH   It is some oher char.
00896P 00D7 5A                    DECB            It is "**$" so decrement using string
00897P 00D8 30   01      A        LEAX   &1,X     char count and advance the pointer.
00898P 00DA 0C   D9      A        INC    FLDWID   Tne "$" makes room for another digit.
00899P 00DC 96   DA      A DOLRNM LDA    PUMASK   Set the floating dollar sign flag.
00900P 00DE 8A   10      A        ORA    #DOLFLG
00901P 00E0 97   DA      A        STA    PUMASK
00902P 00E2 30   01      A NTBOTH LEAX   &1,X     Point beyond the second char (or
00903                      *    third for "**$").
00904P 00E4 0C   D9      A        INC   FLDWID    Increment the digit count.

PAGE  006  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00906                      *
00907                      * Scan the leading digits (before decimal point) of a numeric field.
00908                      *
00909
00910P 00E6 0F   D8      A NUMNUM CLR    DPWID    Number of trailing (after decimal
00911                      *    point) :=0.
00912P 00E8 0C   D9      A NUMLOP INC    FLDWID   Increment the leading (before decimal
00913                      *    point) digit count.
00914P 00EA 5A                    DECB            More chars in the using string?
00915P 00EB 27   49   0136        BEQ    ENDNUS   No, end of numeric field.
00916P 00ED A6   80      A        LDA    ,X+      Yes, get the next char.
00917P 00EF 81   2E      A        CMPA   #'.      Is it the decimal point?
00918P 00F1 27   1E   0111        BEQ    AFTDOT   Yes, go scan the trailing digit specs.
00919P 00F3 81   23      A        CMPA   #'#      No, is it another leading digit?
00920P 00F5 27   F1   00E8        BEQ    NUMLOP   Yes, scan the next char.
00921P 00F7 81   2C      A        CMPA   #COMMA   Do they want a comma every 3 digits?
00922P 00F9 26   21   011C        BNE    FINNUM   No, no more leading digit specs.
00923P 00FB 96   DA      A        LDA    PUMASK   Yes, set the comma flag.
00924P 00FD 8A   40      A        ORA    #COMFLG
00925P 00FF 97   DA      A        STA    PUMASK
00926P 0101 20   E5   00E8        BRA    NUMLOP   Scan for more leading digits.

