PAGE  001  ECBCOM  .SA:0  TXRPU  Extension ROM Direct Page RAM

00700                             OPT    L,LLE=120
00701                             NAM    TXRPU    - PRINT USING for TCC Extension ROM.
00702
00703                      **********************************************************************
00704                      *                                                                    *
00705                      *    Copyright 1982 by Microsoft Corporation, all rights reserved    *
00706                      *                                                                    *
00707                      **********************************************************************
00708
00709                             TTL    External Declarations
00710
00711                             XREF   CHKCOM,CHKSTR,CHROUT,CRDO
00712                             XREF   DIV10
00713                             XREF   FADDH,FBUFFR,FCERR,FDCEND,FMULT,FOUT,FOUTBL,FOUTCP,FRETMP
00714                             XREF   FRMCHK,FRMEVL,FRMNUM
00715                             XREF   LEFTUS
00716                             XREF   MUL10
00717                             XREF   N.0999,N.9999,N.MIL
00718                             XREF   OUTSPC
00719                             XREF   QINT
00720                             XREF   STROUT,STRPRT,SYNCHR
00721                             XREF   USINTK
00722
00723                             TTL    Equates
00724
00725                      *
00726                      * The PRINT USING mask (PUMASK) bit definitions.
00727                      *
00728
00729            0001    A SCIFLG EQU    &1       Bit 0 - Scientific notation.
00730            0004    A TRLFLG EQU    &4       Bit 2 - Trailing sign.
00731            0008    A PLSFLG EQU    @10      Bit 3 - Print "+" instead of space
00732                      *      for positive numbers.
00733            0010    A DOLFLG EQU    @20      Bit 4 - Floating dollar sign.
00734            0020    A ASTFLG EQU    @40      Bit 5 - Asterisk fill.
00735            0040    A COMFLG EQU    @100     Bit 6 - Insert commas.
00736
00737            0024    A FLTMON EQU    '$       Character to use for floating money
00738                      *    sign. Can be changed to a yen sign
00739                      *    for example.
00740            0025    A MLCSTR EQU    '%       Character indicating a multi-char
00741                      *   string field. (For compatibility
00742                      *   with TRS-80 Model I Level II BASIC.
00743
00744                             TTL    The PRINT USING driver.
00745
00746                      *
00747                      * Entered at PUTEST.
00748                      *
00749
00750                      *
00751                      * Here to handle a string field.
00752                      *
00753
00754P 0000 86   01      A SMSTRF LDA    #&1      Single char string field.
00755P 0002 97   D9      A        STA    FLDWID
00756P 0004 5A             ISSTRF DECB            Decrement using string char count.
00757P 0005 BD   019A    P        JSR    PLSPRT   Print possible preceding plus.

PAGE  002  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00758P 0008 9D   A5      A        JSR    CHRGOT   End of value list reached?
00759P 000A 1027 008C 009A        LBEQ   FLDFIN   Yes, PRINT USING is finished.
00760P 000E D7   D3      A        STB    USSCNT   No, save using string char count.
00761P 0010 BD   0000    A        JSR    FRMEVL   Evaluate next value in the value list.
00762P 0013 BD   0000    A        JSR    CHKSTR   It must be a string to go into this
00763                      *    string field.
00764P 0016 9E   52      A        LDX    FACMO    X:=pointer to the string descriptor.
00765P 0018 9F   4D      A        STX    DSCPNT   Set up DSCPNT for LEFT$ code.
00766P 001A D6   D9      A        LDB    FLDWID   B:=width of string field.
00767P 001C BD   0000    A        JSR    LEFTUS   Get leftmost B chars or whole string
00768                      *    if it's shorter than the field.
00769P 001F BD   0000    A        JSR    STRPRT   Print the string.
00770P 0022 9E   52      A        LDX    FACMO    See if spaces are needed to fill out
00771P 0024 D6   D9      A        LDS    FLDWID   the field.
00772P 0026 E0   84      A        SUBB   ,X
00773P 0028 5A             UPRTSP DECB            More spaces to print?
00774P 0029 102B 0148 0175        LBMI   FNSTRF   No, string field is finished.
00775P 002D BD   0000    A        JSR    OUTSPC   Yes, print another one.
00776P 0030 20   F6   0028        BRA    UPRTSP   See if more.

PAGE  003  ECBPU  .SA:1  TXRPU  The PRINT USING driver.

00778                      *
00779                      * Here when MLCSTR is seen which indicates the start of a multi-char
00780                      * string field if it is followed by a variable number of spaces and
00781                      * another MLCSTR.
00782                      *
00783
00784P 0032 D7   D3      A BGSTRF STB    USSCNT   Save the using string char count.
00785P 0034 9F   0F      A        STX    TEMPX1   Save the using string pointer.
00786P 0036 86   02      A        LDA    #&2      The field width is 2 for the MLCSTRs
00787P 0038 97   D9      A        STA    FLDWID   plus the number of enclosed spaces.
00788P 003A A6   84      A LPSTRF LDA    ,X       Get next using string char.
00789P 003C 81   25      A        CMPA   #MLCSTR  End of the string field?
00790P 003E 27   C4   0004        BEQ    ISSTRF   Yes, go print the string.
00791P 0040 81   20      A        CMPA   #'       No, an enclosed space?
00792P 0042 26   07   004B        BNE    NOSTRF   No, it isn't really a string field.
00793P 0044 0C   D9      A        INC    FLDWID   Yes, increment the field width.
00794P 0046 30   01      A        LEAX   &1,X     Point to the next using string char.
00795P 0048 5A                    DECB            Decrement using string char count.
00796P 0049 26   EF   003A        BNE    LPSTRF   Is there are more chars in the using
00797                      *    string then go scan them. Otherwise
00798                      *    the closing MLCSTR wasn't found and
00799                      *    therefore we aren't really looking
00800                      â€¢    at a string field.
00801P 004B 9E   0F      A NOSTRF LDX    TEMPX1   It isn't a string field so restore the
00802P 004D D6   D3      A        LDB    USSCNT   using string pointer and char count.
00803P 004F 86   25      A        LDA    #MLCSTR  Just print the MLCSTR since it doesn't
00804                      *    belong to a field.
00805P 0051 BD   019A    P NEWUCH JSR    PLSPRT   Print possible preceding plus since
00806                      *    it didn't start a numeric field.
00807P 0054 BD   0000    A        JSR    CHROUT   Now print the current char since it
00808                      *    isn't part of a field.
00809P 0057 20   22   007B        BRA    PRCCHR   Go look at the next using string char.

