PAGE  001  ECBOEM  .SA:1  IODRVR I/O DRIVER EQUATES

00001                             NAM    IODRVR
00002                             OPT    REL,LLE=120
00003                             TTL    I/O DRIVER EQUATES
00004                      *
00005                      * I/O DEVICE ADDRESS EQUATES
00006                      *
00007                      * CONVENTIONS USED:
00008                      *
00009                      * DDR = DATA DIRECTION REGISTER
00010                      * PDR = PERIPHERAL DATA REGISTER
00011                      * CR  = CONTROL REGISTER
00012                      * A   = A-SIDE OF PIA
00013                      * B   = B-SIDE OF PIA
00014                      * E.G.  P0CRA = CONTROL REGISTER FOR A-SIDE OF PIA SELECTED BY P0
00015                      * PIA ADDRESS EQUATES FOLLOW
00016                             XREF   VFIRQ,VIRQ,VNMI,VSWI,VSWI2,VSWI3,XRSLWC,FCERR
00017                      *
00018                      * P0 PIA
00019                      *
00020            FF00    A P0DDRA EQU    $FF00
00021            FF00    A P0PDRA EQU    P0DDRA
00022            FF01    A P0CRA  EQU    P0DDRA+1
00023            FF02    A P0DDRB EQU    P0DDRA+2
00024            FF02    A P0PDRB EQU    P0DDRB
00025            FF03    A P0CRB  EQU    P0DDRB+1
00026                      *
00027                      * RS232  6551 CHIP
00028                      *
00029            FF04    A RSTXD  EQU    $FF04
00030            FF04    A RSRXD  EQU    RSTXD
00031            FF05    A RSSTAT EQU    $FF05
00032            FF06    A RSCMD  EQU    $FF06
00033            FF07    A RSCNT  EQU    $FF07
00034                      *
00035                      * P1 PIA
00036                      *
00037            FF20    A P1DDRA EQU    $FF20
00038            FF20    A P1PDRA EQU    P1DDRA
00039            FF21    A P1CRA  EQU    P1DDRA+1
00040            FF22    A P1DDRB EQU    P1DDRA+2
00041            FF22    A P1PDRB EQU    P1DDRB
00042            FF23    A P1CRB  EQU    P1DDRB+1
00043                      *
00044                      * SAM CHIP EQUATES
00045                      *
00046            FFC0    A SAMCR  EQU    $FFC0    BASE ADDRESS OF SAM CONTROL REGISTER
00047            FFC9    A SAMF1S EQU    $FFC9    F1 SET ADDRESS
00048            FFDB    A SAMMOS EQU    $FFDB    M0 SET ADDRESS
00049            FFDD    A SAMM1S EQU    $FFDD    M1 SET ADDRESS
00050            FFDE    A SAMTYC EQU    $FFDE    MAP TYPE CLEAR ADDRESS
00051            FFDF    A SAMTYS EQU    $FFDF    "   "    SET     "
00052                      *
00053                      * ADDRESSES OF I/O DRIVER RAMS FOLLOW
00054                      *
00055            0082    A PWIDTH EQU    $82      PULSE WIDTH COUNTER
00056            0083    A BITCNT EQU    $83      BIT COUNTER (SYNC BITS NORMALLY)
00057            0084    A BPFLAG EQU    $84      BIT PHASE FLAG
00058            0085    A LSTSIN EQU    $85      LAST SINE TABLE ENTRY TO BE OUTPUT

PAGE  002  ECBOEM  .SA:1  IODRVR I/O DRIVER EQUATES

00059            0088    A CURADR EQU    $88      CURRENT CURSOR ADDRESS IN 88,89
00060            008F    A CBLCNT EQU    $8F      CURRENT CURSOR BLINK COUNT
00061            0090    A LDRCNT EQU    $90      COUNT OF NUMBER OF LEADER BYTES
00062            0092    A MIN0WD EQU    $92      MINIMUM CYCLE WIDTH OF 1200 HZ (IN PWIDTHS)
00063            0093    A MIN0PW EQU    $93      "    PULSE   "   "    "  "   "     "
00064            0094    A MAX0PW EQU    $94      MAXIMUM   "     "   "    "      "     "
00065            0095    A MODLAY EQU    $95      CASSETTE MOTOR DELAY VALUE
00066            0097    A KBDLAY EQU    $97      KEYBOARD DEBOUNCE DELAY VALUE
00067            0099    A LPTCFW EQU    $99      LINE PRINTER COMMA FIELD WIDTH
00068            009A    A LPTLCF EQU    $9A      "     "    LAST COMMA FIELD
00069            009B    A LPTWID EQU    $98      "     "    WIDTH
00070            009C    A LPTPOS EQU    $9C      "     "    CURRENT CHARACTER POSITION
00071            011D    A LSTKEY EQU    $011D    ASCII OF KEY CURRENTLY PRESSED
00072            011E    A CNTDWN EQU    $011E    COUNTDOWN TO KEYBOARD REPEAT
00073            011F    A RPTDLY EQU    $011F    INTER-REPEAT INTERRUPT COUNT
00074            0148    A AUTOLF EQU    $0148    BUFFER FULL AUTO LINE FEED FLAG
00075            0149    A ALLOCK EQU    $0149    ALPHA LOCK FLAG
00076            014A    A EOLSEQ EQU    $014A    LINE PRINTER EOL TERMINATOR SEQUENCE
00077            0151    A KBROLL EQU    $0151    KEYBOARD ROLLOVER PATTERN TABLE
00078            015A    A POTVAL EQU    $015A    START ADDRESS OF JOYSTICK READINGS
00079            03FD    A LDELAY EQU    $03FD    DELAY AFTER END OF PRINTING LINE
00080            03FF    A PRNFLG EQU    $03FF    SERIAL OR PARRALLEL PRINT FLAG
00081                      *
00082                      * CONSTANT VALUES FOLLOW
00083                      *
00084            00FF    A ON     EQU    $FF      ON VALUE
00085            00FF    A TRUE   EQU    ON       TRUE VALUE
00086            0000    A OFF    EQU    $00      OFF VALUE
00087            0000    A FALSE  EQU    OFF      FALSE VALUE
00088                      * CHARACTER CONSTANTS
00089            0020    A SP     EQU    $20      SPACE
00090            000D    A CR     EQU    $0D      CARRIAGE RETURN
00091            000A    A LF     EQU    $0A      LINE FEED
00092            0008    A BS     EQU    $08      BACK SPACE
00093            0060    A INVSP  EQU    $60      INVERTED SPACE
00094            0012    A SHIFT0 EQU    $12      SHIFTED 0 SPECIAL CASE
00095                      *
00096                      * MISC CONSTANTS
00097                      *
00098            0060    A SYNCNT EQU    $60      NUMBER OF BITS TO MAKE UP VALID SYNC DETECT
00099            0400    A HOMPOS EQU    $0400    HOME POSITION OF SCREEN VIDEO RAM
00200            05FF    A EOSPOS EQU    $05FF    END      "    "     "     "    "
00101            05E0    A BLPOS  EQU    $05E0    START OF LAST LINE ON SCREEN
00102            0084    A LWIDTH EQU    $84      LINE WIDTH OF PRINTER
00103            0010    A LCFW   EQU    $10      COMMA FIELD WIDTH
00104            0074    A LLCF   EQU    LWIDTH-LCFW LAST COMMA FIELD
00105            0008    A COLS   EQU    $08      NUMBER OF COLUMNS IN KB MATRIX
00106            045E    A MSEC10 EQU    $045E    10 MILLISECOND DELAY VALUE
00107            0032    A CBLVAL EQU    $32      CURSOR BLINK RATE CONSTANT
00108                      *
00109                      * END OF EQUATES
00110                      *
00111                      * START ADDRESS OF ROUTINES FOLLOWS
00112                      *
00113                             TTL    I/O DRIVER SUBROUTINES
00114                      * I/O DRIVER SUBROUTINES FOLLOW:
00115                      *
00116                      * HDRINI - HARDWARE INITIALISATION ROUTINE

PAGE  003  ECBOEM  .SA:1  IODRVR I/O DRIVER SUBROUTINES

00117                      *
00118P 0000      0007    A        RMB    $07      WASTE BYTES TO KEEP ADDRESSING COMPATABLE
00119                             XDEF   OEMMEM
00120            0007    P OEMMEM EQU    *
00121                             XDEF   ZHRDIN
00122            0007    P ZHRDIN EQU    *
00123P 0007 CC   0034    A HDRINI LDD    #$0034   A = DD BITS, B = CR BITS
00124P 000A 8E   FF00    A        LDX    #P0DDRA  SET UP BASE ADDRESS OF P0PIA
00125P 000D A7   01      A        STA    1,X      RESET P0CRA
00126P 000F A7   03      A        STA    3,X      AND P0CRB
00127P 0011 A7   84      A        STA    0,X      CONFIGURE P0DDRA FOR INPUTS
00128P 0013 43                    COMA            (A) = $FF
00129P 0014 A7   02      A        STA    2,X      AND P0DDRB AS OUTPUTS
00130P 0016 E7   01      A        STB    1,X      SET UP P0CRA & P0CRB - INTERRUPTS DISABLED
00131P 0018 E7   03      A        STB    3,X      -VE EDGE ON CA1/CB1 & CA2/CB2 IN CR3 FOLLOW
00132P 001A 8E   FF20    A        LDX    #P1D0RA  READY TO CONFIGURE P1PIA
00133P 001D 6F   01      A        CLR    1,X      RESET P1CRA
00134P 001F 6F   03      A        CLR    3,X      AND P1CRB
00135P 0021 4A                    DECA            (A) = $FE SETS PA0 AS INPUT, REST OUTPUTS
00136P 0022 A7   84      A        STA    0,X      DDRA SETUP
00137P 0024 86   F8      A        LDA    #$F8
00138P 0026 A7   02      A        STA    2,X      PB0,PB1,PB2 INPUTS, REST OUTPUTS
00139P 0028 E7   01      A        STB    1,X      CONFIGURE P1CR'S SAME AS P0CR'S
00140P 002A E7   03      A        STB    3,X
00141P 002C 6F   84      A        CLR    0,X      RESET DAC AND PRINTER STROBE
00142P 002E 6F   02      A        CLR    2,X      RESET VDG MODE LINES
00143P 0030 CC   0A98    A        LDD    #$0A98
00144P 0033 FD   FF06    A        STD    RSCMD    SET UP CONTROL/COMMAND REG.S
00145P 0036 B6   FF04    A        LDA    RSRXD    CLEAR RECEIVE DATA BUFFER
00146                      * NOW INITIALISE THE SAM CHIP
00147P 0039 8E   FFC0    A        LDX    #SAMCR   SET UP BASE ADDRESS OF SAM'S CR
00148P 003C C6   10      A        LDB    #16      COUNT OF BITS IN CR OF SAM
00149P 003E A7   81      A SAMCLR STA    0,X++    ACCESS EVERY EVEN ADDRESS
00150P 0040 5A                    DECB            CLEARING ALL CR BITS
00151P 0041 26   FB   003E        BNE    SAMCLR
00152P 0043 F7   FFC9    A        STB    SAMF1S   SETS F1 BIT IN SAM CR
00153P 0046 F7   FFDD    A        STB    SAMM1S   SELECTS 64K RAM OPTION
00154P 0049 20   03   004E        BRA    SAMEND   DON'T INITIALISE 48K SOFTWARE
00155
00156                             XDEF   ENTR48
00157P 004B 7E   0414    P ENTR48 JMP    BOOT64
00158
00159P 004E 5F             SAMEND CLRB
00160P 004F 1F   9B      A        TFR    B,DP     CLEARS THE DP REG
00161P 0051 1F   25      A        TFR    Y,PC     TRANSFER CONTROL TO ADDRESS IN IY
00162                      *
00163                      * SFTINI - SOFTWARE INITIALISATION ROUTINE
00164                      *
00165                             XDEF   ZSFTIN
00166            0053    P ZSFTIN EQU    *
00167P 0053 8E   006A    P SFTINI LDX    #NZDATA  GET READY TO COPY NON-ZERO TABLE ENTRIES
00168P 0056 CE   008F    A        LDU    #CBLCNT  INTO RAM BLOCK STARTING AT CBLCNT
00169P 0059 C6   0D      A        LDB    #13      (B) = COUNT OF BYTES TO COPY
00170P 005B 8D   05   0062        BSR    NZCOPY   INITIATE COPYING
00171P 005D BD   03CA    P        JSR    SFTIN2   PATCH FOR SERIAL PRINTER
00172P 0060 C6   09      A        LDB    #9       AND IS 9 BYTES IN LENGTH
00173P 0062 A6   80      A NZCOPY LDA    0,X+     GET TABLE DATA
00174P 0064 A7   C0      A        STA    0,U+     AND COPY TO RAM AREA

PAGE  004  ECBOEM  .SA:1  IODRVR I/O DRIVER SUBROUTINES

00175P 0066 5A                    DECB            UPDATE COUNT
001762 0067 26   F9   0062        BNE    NZCOPY   REPEAT UNTIL BLOCK COMPLETE
00177P 0069 39                    RTS
00178                      *
00179                      * NON-ZERO TABLE ENTRIES FOLLOW
00180                      *
00181P 006A      32      A NZDATA FCB    CBLVAL   CURSOR BLINK RATE
00182P 006B      0100    A        FDB    $0100    SYNC BYTE COUNT
00183P 006D      12      A        FCB    $12      MIN 1200HZ CYCLE WIDTH
00184P 006E      0A      A        FCB    $0A      "    "    PULSE   "   (HALF CYCLE)
00185P 006F      12      A        FCB    $12      MAX   "      "     "     "      "
00186P 0070      DA5C    A        FDB    MSEC10*50 MOTOR DELAY VALUE - HALF SECOND
00187P 0072      045E    A        FDB    MSEC10   KEYBOARD DEBOUNCE DELAY VALUE
00188P 0074      10      A        FCB    LCFW     LP COMMA FIELD WIDTH
00189P 0075      74      A        FCB    LLCF     LP LAST COMMA FIELD
00190P 0076      84      A        FCB    LWIDTH   LP WIDTH
00191                      * FINAL BLOCK ENTRIES
00192P 0077      FF      A        FCB    ON       LP BUFFER FULL AUTO LF FLAG
00193P 0078      FF      A        FCB    ON       ALPHA LOCK FLAG
00194P 0079      01      A        FCB    1        CHARACTER COUNT IN LP TERMINATOR SEQUENCE
00195P 007A      0D      A        FCB    CR       CARRIAGE RETURN FOLLOWED
00196P 007B      0A      A        FCB    LF       BY LINE FEED SEQUENCE (IF REQUIRED)
00197P 007C      0004    A        BSZ    4        REMAINDER OF SEQUENCE IS FREE
00198                      * END OF NZDATA
00199                      *
00200                      * CBLINK - CURSOR BLINK ROUTINE
00201                      *
00202                             XDEF   ZCBLIN
00203            0080    P ZCBLIN EQU    *
00204P 0080 0A   8F      A CBLINK DEC    CBLCNT   UPDATE BLINK RATE COUNTER
00205P 0082 26   0C   0090        BNE    BLDLAY   IF .NE. 0 THEN DELAY 10 MSECS
00206P 0084 86   32      A        LDA    #CBLVAL  OTHERWISE RESET TO INITIAL VALUE
00207P 0086 97   8F      A        STA    CBLCNT   FOR BLINK RATE
00208P 0088 9E   88      A        LDX    CURADR   GET READY TO FLASH CURSOR
00209P 008A A6   84      A        LDA    0,X      BY READING CHAR AT CURSOR POS
00210P 008C 88   40      A        EORA   #$40     AND INVERTING
00211P 008E A7   84      A        STA    0,X      BEFORE WRITING BACK
00212P 0090 8E   045E    A BLDLAY LDX    #MSEC10  SET UP 10 MSEC DELAY CONSTANT
00213                      *
00214                      * IXDLAY - DELAY ROUTINE
00215                      *
00216P 0093 30   1F      A IXDLAY LEAX   -1,X     DECREMENT IX
00217P 0095 26   FC   0093        BNE    IXDLAY   REPEAT UNTIL (IX) = 0
00218P 0097 39                    RTS
00219                      *
00220                      * ROUTINES USED BY THEKEYBOARD POLLER FOLLOW
00221                      *
00222                      * CHKROW - CHECKS ROWS OF K/B MATRIX FOR CLOSURE
00223                      *
00224P 0098 F6   FF00    A CHKROW LDB    P0PDRA   READ ROW DATA
00225P 009B CA   80      A        ORB    #$80     SET UNUSED BIT
00226P 009D 7D   FF02    A        TST    P0PDRB   SHIFT KEY IS
00227P 00A0 2B   02   00A4        BMI    NOSHFT   IS MASKED OUT
00226P 00A2 CA   40      A        ORB    #$40     BY THIS
00229P 00A4 39             NOSHFT RTS
00230                      *
00231                      * CSHIFT - CHECKS THE STATE OH THE SHIFT KEY, Z = 1 IF PRESSED
00232                      *

PAGE  005  ECBOEM  .SA:1  IODRVR I/O DRIVER SUBROUTINES

00233P 00A5 C6   7F      A CSHIFT LDB    #$7F     CLEAR TOP BIT
00234P 00A7 F7   FF02    A        STB    P0PDRB   OF THE COLUMNS
00235P 00AA F6   FF00    A        LDB    P0PDRA   THEN READ ROWS
00236P 00AD C4   40      A        ANDB   #$40     MASK OFF ALL BUT SHIFT KEY
00237P 00AF 39                    RTS
00238                      *
00239                      * POLCAT - POLL THE K/B AND RETURN CHARACTER IN (A)
00240                      *
00241                             XDEF   ZPOLCA
00242            00B0    P ZPOLCA EQU    *
00243P 00B0 34   14      A POLCAT PSHS   B,X      SAVE REGS
00244P 00B2 8D   03   00B7        BSR    POLLKB   POLL AND ENCODE KEYS
00245P 00B4 7E   03AB    P        JMP    KEYINT   INITILISE REPEAT COUNTDOWN
00246                      *
00247                      * POLLKB - POLLS THE K/B, DETECTS KEY CLOSURES, DEBOUNCES KEYS, PERFORMS
00248                      * ROLLOVER AND ENCODES CHARACTERS
00249                      *
00250P 00B7 32   7E      A POLLKB LEAS   -2,S     RESERVE 2 BYTES OF WORKSPACE ON STACK
00251P 00B9 8E   0151    A        LDX    #KBROLL  SET UP ADDRESS OF KB ROLLOVER TABLE
00252                      * THE FIRST THING TO DO IS TO CHECK FOR ANY KEY CLOSURES WHATSOEVER
00253P 00BC 7F   FF02    A        CLR    P0PDRB   FORCE 0'S TO ALL COLUMNS
00254P 00BF F6   FF00    A        LDB    P0PDRA   READ ROW STATUS
00255P 00C2 CA   80      A        ORB    #$80     SET UNUSED BIT
00256P 00C4 E1   84      A        CMPB   0,X      CHECK FOR ANY KEYBOARD ACTIVITY
00257P 00C6 27   72   013A        BEQ    NONKEY   IF THE SAME THEN NO CHANGE
00256                      * SOME CHANGE HAS BEEN DETECTED AT THIS POINT SO NEXT THING TO DO
00259                      * IS TO MAKE SURE THAT IT WASN'T THE JOYSTICK BUTTONS.
00260P 00C8 1F   98      A        TFR    B,A      SAVE ROW STATUS
00261P 00CA 73   FF02    A        COM    P0PDRB   FORCE 1'S TO COLUMNS
00262P 00CD 8D   C9   0098        BSR    CHKROW   CHECK FOR JOYSTICK BUTTONS
00263P 00CF C1   FF      A        CMPB   #$FF     AS 0'S ON THE PA0 OR PA1
00264P 00D1 26   67   013A        BNE    NONKEY   MEAN BUTTONS ARE DOWN
00265P 00D3 A7   80      A        STA    0,X+     SAVE FULL ROW STATE IN ROLLOVER TABLE
00266                      * AT THIS POINT A CHANGE IN THE STATE OF THE ROWS HAS BEEN DETECTED
00267                      * SO THE FOLLOWING CODE IS USED TO DETECT WHICH KEY IT WAS
00268P 00D5 6F   E4      A        CLR    0,S      RESET COLUMN COUNT
00269P 00D7 C6   FE      A        LDB    #$FE     SET UP 0 IN LS BIT
00270P 00D9 F7   FF02    A        STB    P0PDRB   AND SEND OUT TO MATRIX COLUMNS
00271P 00DC 8D   BA   0098 SCANKB BSR    CHKROW   CHECK ROW CLOSURES
00272P 00DE E7   61      A        STB    1,S      SAVE ROW STATE AWAY
00273P 00E0 E8   84      A        EORB   0,X      PERFORM KEY CLOSURE AND ROLLOVER DETECTION
00274P 00E2 E4   84      A        ANDB   0,X      BIT SET IN B IF IT DIFFERED FROM LAST TIME
00275P 00E4 A6   61      A        LDA    1,S      RESTORE ROW STATE AND
00276P 00E6 A7   80      A        STA    0,X+     SAVE IN ROLLOVER TABLE FOR NEXT TIME
00277P 00E8 5D                    TSTB            ANY CHANGES TO KEYS?
00276P 00E9 26   0A   00F5        BNE    DEBKEY   YES, DEBOUNCE BEFORE ENCODING
00279P 00EB 6C   E4      A        INC    0,S      ELSE UPDATE COLUMN COUNT
00280P 00ED 43                    COMA            USED TO SET CARRY BIT
00281P 00EE 79   FF02    A        ROL    P0PDRB   BEFORE SHIFTING 0 T0 NEXT COLUMN
00282P 00F1 25   E9   00DC        BCS    SCANKB   REPEAT UNTIL ALL DONE OR CLOSURE FOUND
00283P 00F3 20   45   013A        BRA    NONKEY   MUST HAVE BEEN NO KEYS FOUND
00284                      * KEY FOUND - DEBOUNCE IT
00285P 00F5 9E   97      A DEBKEY LDX    KBDLAY   WAIT DEBOUNCE PERIOD
00285P 00F7 8D   9A   0093        BSR    IXDLAY   BEFORE RE-CHECKING KB
00267P 00F9 1E   89      A        EXG    A,B      COPY ORIGINAL KEY CLOSURE
00288P 00FB 8D   9B   0098        BSR    CHKROW   AND GET NEW STATE
00289P 00FD E1   61      A        CMPB   1,S      AND COMPARE WITH ORIGINAL
00290P 00FF 1E   89      A        EXG    A,B      RESTORE KEY CLOSURE
