PAGE  001  ECBCOM  .SA:0  Downlo Extension ROM Direct Page RAM

00700                             OPT    L,LLE=120
00701                             NAM    Downloader for TXR / MLC
00702
00703                      **********************************************************************
00704                      *                                                                    *
00705                      â€¢    Copyright 1982 by Microsoft Corporation, all rights reserved    *
00706                      *                                                                    *
00707                      **********************************************************************
00708
00709                             TTL    External Declarations
00710
00711                             XREF   BLKIN,BLKOUT
00712                             XREF   CASBUF,CHKCOM,CHRINP,CHROUT,CLOAD,CLOSIT,CLSCAS,COMBYT,CSRDON
00713                             XREF   ERRNE,ERROR,EVLADR
00714                             XREF   FCERR,FILNAM,FILTYP,FINLDB,FMERR
00715                             XREF   GAPFLG,GETBYT,GETFLN
00716                             XREF   INHST,IOERR
00717                             XREF   JOYIN
00718                             XREF   LODBUF
00719                             XREF   MAIN,MLDUNG
00720                             XREF   OPNCSI,OUTHST
00721                             XREF   PIA1AD,PIA1BD,POLCAT
00722                             XREF   SCRTCH,STBAUD
00723                             XREF   TRMCHK
00724                             XREF   WRTLDR
00725
00726                             TTL    Equates
00727
00728            0005    A DNLTRY EQU    &5       Number of times to try before giving
00729                      *    up when communicating with the host.
00730
00731            00BC    A P.ABRT EQU    @274     Abort control code.  (BC)
00732            00C8    A P.ACK  EQU    @310     Acknowledge control code.  (C8)
00733            0097    A P.BLKR EQU    @227     Block request.  (97)
00734            008A    A P.FILR EQU    @212     File request.  (8A)
00735            00DE    A P.NAK  EQU    @336     Bad transmission.  (DE)
00736
00737                             TTL    DLOAD - Load program from host computer.
00738
00739                      *
00740                      * DLOAD[<filename>[,<baud rate select>]]
00741                      * DLOADM[<filename>[,[<baud rate select>][,<load offset>]]]
00742                      *
00743
00744                             XDEF   DLOAD
00745P 0000 BD   0000    A DLOAD  JSR    CLSCAS   Close the cassette since DLOAD uses
00746                      *    the cassette buffer and other temps.
00747P 0003 6F   E2      A        CLR    ,-S      Say it isn't DLOADM.
00748P 0005 9D   A5      A        JSR    CHRGOT   Refetch since CLSCAS destroyed A.
00749P 0007 81   4D      A        CMPA   #'M      Is it DLOADM?
00750P 0009 26   04   000F        BNE    NTDLDM   No.
00751P 000B A7   E4      A        STA    ,S       Yes, remeber that it is.
00752P 000D 9D   9F      A        JSR    CHRGET   Skip over the "M".
00753P 000F BD   0000    A NTDLDM JSR    GETFLN   Scan the filename into FILNAM.
00754P 0012 9D   A5      A        JSR    CHRGOT   End of the statement?
00755P 0014 27   11   0027        BEQ    OLDBR    Yes, use the old baud rate.
00756P 0016 BD   0000    A        JSR    CHKCOM   No, skip a comma.
00757P 0019 81   2C      A        CMPA   #COMMA   Use the old baud rate?

PAGE  002  ECBDNL  .SA:1  Downlo DLOAD - Load program from host computer.

00758P 001B 27   0A   0027        BEQ    OLDBR    Yes.
00759P 001D BD   0000    A        JSR    GETBYT   No, evaluate the baud rate arg.
00760P 0020 BD   0000    A        JSR    STBAUD   Call the baud rate select routine.
00761P 0023 1025 FFD9    A        LBCS   FCERR    Bad argument, give FC error.
00762P 0027 BD   00AB    P OLDBR  JSR    OPNHST   Open the file on the host and load
00763                      *    the cassette buffer.
00764P 002A 34   02      A        PSHS   A        Save the file type byte.
00765P 002C 86   FD      A        LDA    #-&3     Set DEVNUM so chars come from the
00766P 002E 97   6F      A        STA    DEVNUM   host file.
00767P 0030 35   02      A        PULS   A        Retrieve the file type.
00768P 0032 6D   E0      A        TST    ,S+      Test and get rid of the DLOADM flag.
00769P 0034 26   2A   0060        BNE    DLOADM   Go handle DLOADM.
00770P 0036 BD   0000    A        JSR    TRMCHK   For DLOAD, the statement must end now.
00771P 0039 5D                    TSTB            Is it an ASCII file?
00772P 003A 27   06   0042        BEQ    BADMOD   No, can't load it.
00773P 003C BD   0000    A        JSR    SCRTCH   Yes, get rid of the old program.
00774P 003F 7E   0000    A        JMP    MAIN     Main does the rest.
00775
00776P 0042 7E   0000    A BADMOD JMP    FMERR    Give a file mode error.
00777                      *    Eventually the host will figure out
00778                      *    that we have given up.

PAGE  003  ECBDNL  .SA:1  Downlo DLOAD - Load program from host computer.

00780                      *
00781                      * The CLOAD code comes here so we can grab CLOADM to handle
00782                      * assembler object code files which have the same format as
00783                      * DLOADM files.
00784                      *
00785
00786                             XDEF   CLOADM
00787P 0045 0F   78      A CLOADM CLR    CASOPN   Yes, force the cassette closed.
00788                      *    (Don't force out buffer to be
00789                      *    consistent with 8K ROM.  See comments
00790                      *    regarding this in 8K CLOAD code.)
00791P 0047 9D   9F      A        JSR    CHRGET   Skip over the "M".
00792P 0049 BD   0000    A        JSR    GETFLN   Scan the filename.
00793P 004C BD   0000    A        JSR    OPNCSI   Open the cassette for input.
00794P 004F 7D   0000    A        TST    GAPFLG   Is it a gapped file?
00795P 0052 1027 FFAA    A        LBEQ   MLDUNG   No, let 8K ROM handle.
00796P 0056 FE   0000    A        LDU    FILTYP   Yes, save the FILTYP and ASCFLG in
00797                      *    in U since LODBUF will overwrite
00798                      *    them.  (LODBUF doesn't affect U.)
00799P 0059 0A  6F       A        DEC    DEVNUM   Set DEVNUM to -1 for cassette.  (It
00800                      *    is OK to assume that DEVNUM is zero
00801                      *    since it is guaranteed to be zero
00802                      *    at the start of each statement.)
00803P 005B BD   0000    A        JSR    LODBUF   Load the cassette buffer.
00804P 005E 1F   30      A        TFR    U,D      A:=FILTYP, B:=ASCFLG.
00805P 0060 83   0200    A DLOADM SUBD   #&2*&256 Must be a binary machine language
00806                      *    file.
00807P 0063 26   DD   0042        BNE    BADMOD   Give file mode error if not.
00808P 0065 9E   8A      A        LDX    DBLZER   Assume no load offset given.
00809P 0067 9D   A5      A        JSR    CHRGOT   Is there one?
00810P 0069 27   06   0071        BEQ    OFFNO    No.
00811P 006B BD   0000    A        JSR    CHKCOM   Yes, skip the comma and evaluate
00812P 006E BD   0000    A        JSR    EVLADR   the load offset into X.
00813P 0071 9F   D3      A OFFNO  STX    LODOFF   Save the load offset.
00814P 0073 BD   0000    A        JSR    TRMCHK   The statement must end now.
00845P 0076 8D   29   00A1 LODMRC BSR    NXTCHR   Get and save the record type byte.
00816P 0078 34   02      A        PSHS   A
00817P 007A 8D   1E   009A        BSR    LOD2M    Read the record length into D.
00818P 007C 1F   02      A        TFR    D,Y      Move byte count to Y.
00819P 007E 8D   1A   009A        BSR    LOD2M    D:=load or execution address,
00820P 0080 D3   D3      A        ADDD   LODOFF   Add in the offset.
00821P 0082 DD   9D      A        STD    EXECAD   Store it for the EXEC statement.
00622P 0084 1F   01      A        TFR    D,X      Put load address into X.
00823P 0086 A6   E0      A        LDA    ,S+      Is this a data record?
00824P 0088 1026 FF74    A        LBNE   CLOSIT   No, close the file and return.
00825P 008C 8D   13   00A1 LODMLP BSR    NXTCHR   Get a byte of the program.
00826P 008E A7   84      A        STA    ,X       Store it.
00827P 0090 A1   80      A        CMPA   ,X+      Did it store OK?
00828P 0092 26   14   00A8        BNE    GOIOER   No, give I/O error.
00829P 0094 31   3F      A        LEAY   -&1,Y    Yes, more to read?
00830P 0096 26   F4   008C        BNE    LODMLP   Yes, read the next byte.
00831P 0098 20   DC   0076        BRA    LODMRC   No, go handle the next record.
00832
00833P 009A 8D   00   009C LOD2M BSR     LOD1M    D:=next two bytes from tape.
00834P 009C 8D   03   00A1 LOD1M BSR     NXTCHR
00835P 009E 1E   89      A        EXG    A,B
00836P 00A0 39             LODRTS RTS
00837

