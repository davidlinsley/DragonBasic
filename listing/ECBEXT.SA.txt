PAGE  001  ECBCOM  .SA:0  EXTEND Extension ROM Direct Page RAM

00700                             OPT    L,LLE=120
00701                             NAM    EXTEND   - Extended Features for TCC / MLC
00702
00703                      **********************************************************************
00704                      *                                                                    *
00705                      *    Copyright 1982 by Microsoft Corporation, all rights reserved    *
00706                      *                                                                    *
00707                      **********************************************************************
00708
00709                             TTL    External Declarations
00710
00711                             XREF   ASC2
00712                             XREF   BASRST,BLKOUT,BLTU,BUF
00713                             XREF   CASOFF,CHEAD,CHEADA,CHKCLS,CHKCOM,CHKNUM,CHKOPN,CHKSTR,CHROUT
00714                             XREF   CIRCLE,CLEARC,CLOATK,COLORS,COMBYT,CONDCR,CONINT,COPLOP
00715                             XREF   CRDO,CSAVE,CSAVTK
00716                             XREF   DATA,DCRNCH,DEVPRM,DLOAD,DOFDSP,DOSDSP,DRAW
00717                             XREF   EDTENT,ELSETK,ENDCON,EOFFIN,EOFWRT,EQULTK
00718                             XREF   ERPRNT,ERRID,ERROR,ERRUF,EVLADR
00719                             XREF   FADD,FCERR,FDIV,FHALF,FINIT
00720                             XREF   FINLOG,FINSAV,FMULT,FNDLIN,FNTK,FONE
00721                             XREF   FOUT,FOUTCP,FPWRT,FREFAC,FRESTR,FRETMP,FRMEVL
00722                             XREF   FRMNUM,FSUB,FUNDS1
00723                             XREF   GET,GETADR,GETBYT,GETDNM,GETFLN,GETSPA
00724                             XREF   GIVABF,GOGONE,GONE3,GOPTNW,GOTK
00725                             XREF   HKASGN,HKCHRI,HKCHRO,HKCLS1,HKCRNC,HKERR,HKEVAL
00726                             XREF   HKNWST,HKRENM,HKRUN
00727                             XREF   INCHR,INIT,INLNDO,INPCOM,INPRT,INT,ISCNTC,ISDIGC,ISLETC
00728                             XREF   LET,LINE,LINGET,LINPRT,LOADAD,LOFBUF
00729                             XREF   MID$TK,MINUTK,ML1632,MLDVEX,MOVAF,MOV1F,MOVFA1,MOVFM
00730                             XREF   MOVINS,MOVMF,MULDIV
00731                             XREF   NEGOP,NORMAL
00732                             XREF   OPNICK,OPNCSO,OPNOCK,OUTQST,OUTSPC,OVERR
007,Z                             XREF   PAINT,PARCHK,PCLEAR,PCLS,PCOPY,PIA0BC,PIA0BD,PIA1BD
00734                             XREF   PINIT,PLAY,PLYCLK,PMODE
00735                             XREF   POLY,POLYX,PPOINT,PRESET,PSET,PTRGET,PTRGT2,PUT
00736                             XREF   READY,RUNC
00737                             XREF   SAM,SAMALP,SCREEN,SCRTCH,SETDNM,SIGN,SIN,SIN1,SNDOFF,SNERR
00738                             XREF   SNGFLT,STRLTI,STRSPA,STRTAD,STKINI,STMDS1
00739                             XREF   STRLT3,STROUT,STRPRT,STRTXT,STUB1,SUBTK,SYNCHR
00740                             XREF   THENTK,TICKER,TOTK,TRMCHK
00741                             XREF   ULERR,USRTAB,USRTK
00742                             XREF   VIRQ
00743                             XREF   WRTLDR
00744                             XREF   ZEROF1
00745
00746                             TTL    Miscellanous Routines
00747
00748                      *
00749                      * The RUN code comes here to set up the defaults for the PLAY
00750                      * and DRAW code.  The initialization code also comes here for
00751                      * the same reason.
00752                      *
00753
00754                             XDEF   XRRUN
00755P 0000 CC   B844    A XRRUN  LDD    #$B844   Init the PLAY arguments.
00756P 0003 DD   DF      A        STD    HIGHA    Set volume to 15 decimal.
00757P 0005 86   02      A        LDA    #&2      Set tempo to 2.

PAGE  002  ECBEXT  .SA:1  EXTEND Miscellanous Routines

00758P 0007 97   E2      A        STA    TEMPO
00759P 0009 97   DE      A        STA    OCTAVE   Select middle C octave.
00760P 000B 48                    ASLA            Set to undotted quarter notes.
00761P 000C 97   E1      A        STA    LNOTE
00762P 000E 0F   E5      A        CLR    DOTFLG
00763P 0010 DC   8A      A        LDD    DBLZER   Init the DRAW arguments.
00764P 0012 DD   E8      A        STD    DRWANG   Set angle and scale to zero.
00765P 0014 C6   80      A        LDB    #&128    Position to the middle.  (128,96) 
00766P 0016 DD   C7      A        STD    LSAVEX
00767P 0018 C6   60      A        LDB    #&96
00768P 001A DD   C9      A        STD    LSAVEY
00769P 001C 39             RUNRTS RTS             Return to RUN or initialization code.
00770
00771                             TTL    CSAVEM Code
00772
00773                      *
00774                      * CSAVEM <filename>,<first address>,<last address>,<execution address>
00775                      *
00776
00777                             XDEF   CSAVEM
00778P 001D 9D   9F      A CSAVEM JSR    CHRGET   Eat the "M" of CSAVEM.
00779P 001F BD   0000    A        JSR    GETFLN   Scan the filename.
00780P 0022 8D   43   0067        BSR    STKXAD   Evaluate the first address.
00781P 0024 BF   0000    A        STX    LOADAD   Put it in the file header too.
00782P 0027 8D   3E   0067        BSR    STKXAD   Evaluate the last address.
00783P 0029 AC   62      A        CMPX   &2,S     Is last .GE. first?
00784P 002B 1025 FFD1    A        LBLO   FCERR    No, give FC error.
00785P 002F 8D   36   0067        BSR    STKXAD   Yes, evaluate the execution address
00786P 0031 BF   0000    A        STX    STRTAD   and put it in the file header block.
00787P 0034 9D   A5      A        JSR    CHRGOT   The statement must end now or we
00788P 0036 26   E4   001C        BNE    RUNRTS   to a RTS so NEWSTT will give a
00789                      *    syntax error.
00790P 0038 86   02      A CSMDOR LDA    #&2      File type is machine language.
00791P 003A 9E   8A      A        LDX    DBLZER   GAPFLG:=ASCFLG:=.FALSE.
00792P 003C BD   0000    A        JSR    OPNCSO   Open cassette output file.
00793P 003F 0F   78      A        CLR    CASOPN   Mark cassette as closed since
00794                      *    OPNCSO marked it as open.
00795P 0041 0C   7C      A        INC    BLKTYP   Set block type to data.
00796P 0043 BD   0000    A        JSR    WRTLDR   Turn on the cassette and write a
00797                      *    leader.
00798
00799P 0046 AE   64      A        LDX    &4,S     X:=first address.
00800P 0048 9F   7E      A CSAVML STX    CBUFAD   Set the buffer address to write the
00801                      *    next block out 
00802P 004A 86   FF      A        LDA    #&255    Assume it's a full block.
00803P 004C 97   7D      A        STA    BLKLEN
00804P 004E EC   62      A        LDD    &2,S     See how many more bytes to write.
00805P 0050 93   7E      A        SUBD   CBUFAD
00606P 0052 24   05   0059        BHS    MORSAV   There's more to save.
00807P 0054 32   66      A        LEAS   &6,S     Nothing more, clean up the stack
00808P 0056 7E   0000    A        JMP    FINSAV   and go close the file.
00809
00810P 0059 1083 00FF    A MORSAV CMPD   #&255    Is there a full block?
00811P 005D 24   03   0062        BHS    BIGBLK   Yes.
00812P 005F 5C                    INCB            No be sure to get the last byte.
00813P 0060 D7   7D      A        STB    BLKLEN   Set actual block length.
00814P 0062 BD   0000    A BIGBLK JSR    BLKOUT   Write out the block.
00815P 0065 20   E1   0048        BRA    CSAVML   Go back for more.

PAGE  003  ECBEXT  .SA:1  EXTEND CSAVEM Code

00816
00817                             XDEF   STKXAD
00818P 0067 BD   0000    A STKXAD JSR    CHKCOM   Eat the comma.
00819P 006A BD   0000    A        JSR    EVLADR   Evaluate address into X.
00820P 006D EE   E4      A        LDU    ,S       U:=return address.
00821P 006F AF   E4      A        STX    ,S       Stack the evaluated address.
00822P 0071 1F   35      A        TFR    U,PC     Return with evaluated address on
00823                      *    the stack and in X.
00824
00825                              TTL   The FIX function.
00826
00827                      *
00828                      * FIX(X) returns the truncated integer part of X.
00829                      * FIX(X) is equivalent to SGN(X)*INT(ABS(X)).
00830                      * FIX differs from INT in that FIX does not return the next lower
00831                      * integer for negative arguments.
00832                      *
00833
00834
00835                             XDEF   FIX
00336P 0073 BD   0000    A FIX    JSR    SIGN     Is the number positive?
00837P 0076 2B   03   007B        BMI    FIXNEG   No.
00838P 0078 7E   0000    A GOINT  JMP    INT      Yes, just do normal INT function.
00839
00840P 007B 03   54      A FIXNEG COM    FACSGN   Negate the argument.
00841P 007D 8D   F9   0078        BSR    GOINT    Take the INT.
00842P 007F 7E   0000    A        JMP    NEGOP    Restore the original sign and return.
00843                      *    (Can't COM FACSGN, RTS since 0
00844                      *    would become -0. For example,
00845                      *    ?FIX(-.1) would print -0.)
00846
00847                             TTL    The EDIT Command
00848
00849                             XDEF   EDIT
00850P 0082 BD   04BC    P EDIT   JSR    LINTRM   LINNUM:=number of line to EDIT.
00851                      *    (Line number must be terminated.)
00852P 0085 32   62      A        LEAS   &2,S     Get rid of the NEWSTT return address
00853                      *    since EDIT exits into the MAIN code.
00854P 0087 86   01      A EDITA  LDA    #&1      Set flag so line will be listed
00855P 0089 97   D8      A        STA    EDTLST   prior to starting the edit.
00856P 008B BD   0000    A        JSR    FNDLIN   X:=pointer to link field of line.
00857P 008E 1025 FF6E    A        LBCS   ULERR    If carry set then line doesn't exist.
00858P 0092 BD   0000    A        JSR    DCRNCH   Decrunch the line into BUF.
00859P 0095 1F   20      A        TFR    Y,D      Calculate and store the line length.
00860P 0097 83   0001    A        SUBD   #BUF+&1  (The zero byte terminator isn't
00861P 009A D7   D7      A        STB    EDTLEN   included in the length.)
00862
00863P 009C DC   2B      A EDTPLN LDD    LINNUM   Print the line number followed
00864P 009E BD   0000    A        JSR    LINPRT   by a space.
00865P 00A1 BD   0000    A        JSR    OUTSPC
00866P 00A4 8E   0000    A        LDX    #BUF     Point to the start of the line.
00667P 00A7 D6   D8      A        LDB    EDTLST   Should the line be listed?
00868P 00A9 26   25   00D0        BNE    ELSTIT   Yes, go do it
00869
00870P 00AB 5F             EDTSUB CLRB            Repetition count:=0.
00871P 00AC BD   01D6    P EDTREP JSR    EDITIN   Get char - screen out bad ones.
00872P 00AF BD   0000    A        JSR    ISDIGC   Is it a digit?
00877P 00B2 25   0B   00BF        BCS    EDNTDG   No.

