PAGE  001  ECBCOM  .SA:0  ECBMOD Extension ROM Direct Page RAM

00700                             OPT    L,LLE=120
00701                             NAM    ECBMOD
00702
00703                      **********************************************************************
00704                      *                                                                    *
00705                      *    Copyright 1982 by Microsoft Corporation, all rights reserved    *
00706                      *                                                                    *
00707                      **********************************************************************
00708
00709                             TTL    External Declarations
00710
00711                             XREF   ALPHLK,ASC2,ASCFLG
00712                             XREF   BOOT64,BITIN,BUF
00713                             XREF   CASBUF,CASOFF,CASON,CBIN,CBLINK,CBOUT,CHKCLS,CHKCOM,CHKOPN
00714                             XREF   CHR$DO,CLOADM,COMBYT,CONINT,CRDO,CSAVEM,CSFNAM,CSRDON
00715                             XREF   DBNCNT
00716                             XREF   ENDHKS,ERRAO,ERRBM,ERRDN,ERRIO,ERRNO,ERROR,EVLADR
00717                             XREF   FCERR,FILNAM,FILTYP,FINI,FNAMLN,FRESTR,FRMEVL,FRMNUM
00718                             XREF   FUNDSP,FUNLST
00719                             XREF   GAPFLG,GETBYT,GIVABF,GOPTNW
00720                             XREF   HDRLEN,HKBRKC,HRCHRI,HRCHRO,HKCKDI,HRCKDO,HKCLS,HKCLS1
00721                             XREF   HKCLSA,HKDNCK,HKDPRM,HKEOF,HKFNLD,HKINLN,HKOPEN,HOOKS
00722                             XREF   HRDINI
00723                             XREF   INTCNV,INTIDX,ISCNTC,INTWDG
00724                             XREF   JOYIN
00725                             XREF   LDBUFR,LIST,LOADAD,LPTOUT
00726                             XREF   MAIN
00727                             XREF   NFUNTK,NNRMTK,NRTSH3,NRTSHK,NZLINK
00728                             XREF   OFFTK,ONTK
00729                             XREF   PINIT,POLCAT,POTVAL
00730                             XREF   READY,REASON,REDDY,RESLST,ROLTBL
00731                             XREF   SAMALP,SCROUT,SCRTCH,SFTINI,SNERR,SNGFLT
00732                             XREF   STKINI,STMDSP,STROUT,STRTAD,STUBO,SYNCHR
00733                             XREF   TEMPST
00734                             XREF   USRTAB
00735                             XREF   VIRQ
00736                             XREF   WRTLDR
00737                             XREF   XRRUN,XRSLWC
00738
00739            0001    A        IFEQ   REALIO
00744                       ENDC   IFE REALIO
00745
00746                             TTL    Equates
00747
00748                             XDEF   SCRADR
00749            0400    A SCRADR EQU    @2000    Address of screen memory (400 hex).
00750
00751            0001    A        IFNE   METTOY
00752                             XDEF   PIA0AD
00753            FF00    A PIA0AD EQU    @177400  PIA0, side A, data reg.  (FF00)
00754                             ENDC   IFN      METTOY
00755            0000    A        IFNE   GRPTEK
00758                       ENDC   IFN GRPTEK
00759                             XDEF   PIA0AC
00760            FF01    A PIA0AC EQU    PIA0AD+&1 PIA0, side A, control reg.
00761                             XDEF   PIA0BD
00762            FF02    A PIA0BD EQU    PIA0AC+&1 PIA0, side B, data reg.
00763                             XDEF   PIA0BC

PAGE  002  ECBMOD  .SA:1 ECBMOD Equates

00764            FF03    A PIA0BC EQU    PIA0BD+&1 PIA0, side B, control reg.
00765
00766            0001    A        IFNE   METTOY
00767                             XDEF   PIA1AD
00768            FF20    A PIA1AD EQU    @177440  PIA1, side A, data reg.  (FF20)
00769                             ENDC   IFN      METTOY
00770            0000    A        IFNE   GRPTEK
00773                       ENDC   IFN GRPTEK
00774                             XDEF   PIA1AC
00775            FF21    A PIA1AC EQU    PIA1AD+&1 PIA1, side A, control reg.
00776                             XDEF   PIA1BD
00777            FF22    A PIA1BD EQU    PIA1AC+&1 PIA1, side B, data reg.
00778                             XDEF   PIA1BC
00779            FF23    A PIA1BC EQU    PIA1BD+&1 PIA1, side B, conrtrol reg.
00780
00781            C000    A CARTRM EQU    @140000  Address of cartridge ROM.  (C000)
00782            8000    A EXTROM EQU    @100000  Address of extension ROM.  (8000)
00783
00784                             XDEF   SAM
00785            FFC0    A SAM    EQU    @177700  Address of SAM chip.  (FFC0)
00786
00787            C000    A DSKROM EQU    @140000  The address of the disk ROM.  (C000)
00788
00789                             TTL    Power up and Reset code.
00790
00791                      *
00792                      * Here on RESET and power up after executing HRDINI routine.
00793                      *
00794
00795P 0000 10CE 00FA    A HRDRT1 LDS    #BUF+BUFLEN Set up a temporary stack.
00796            0001    A        IFNE   REALIO
00797P 0004 86   37      A        LDA    #@67     Enable the cartridge interrupt
00798P 0006 B7   FF23    A        STA    PIA1BC   at the PIA.
00799                             ENDC   IFN      REALIO
00800P 0009 96   71      A        LDA    RSTFLG   Is the restart flag set?
00801P 000B 81   55      A        CMPA   #@125
00802P 000D 26   10   001F        BNE    INIT     No, must go through initialization.
00803P 000F 9E   72      A        LDX    RSTVEC   Yes, does the restart vector point
00804P 0011 A6   84      A        LDA    ,X       to a NOP instruction?
00805P 0013 81   12      A        CMPA   #@22
00806P 0015 26   08   001F        BNE    INIT     No, must go through initialization.
00807                      *    This check is made so that if the
00808                      *    user pulls out a cartridge and hits
00809                      *    reset we won't jump to the restart
00810                      *    address where there is no longer
00811                      *    any code.
00812P 0017 6E   84      A        JMP    ,X       Restart the current program.
00813
00814                      *
00815                      * Here on reset and power up.
00816                      *
00817
00818                             XDEF   POWRUP
00819P 0019 31   8C E4     POWRUP LEAY   HRDRT1,PCR Set up return address for HRDINI.
00820P 001C 7E   0000    A        JMP    HRDINI   (Can't use stack since RAM is no
00821                      â€¢    good until the SAM is initialized.)
00822                      *
00823                      * Here to perform BASIC initialization.

PAGE  003  ECBMOD  .SA:1  ECBMOD Power up and Reset code.

00824                      *
00825
00826                             XDEF   INIT
00827            001F    P INIT   EQU    *
00828            0001    A        IFNE   REALIO
00829P 001F  8E  0401    A        LDX    #SCRADR+&1 Clear RAM from 0 to the start of the
00630P 0022  6F  83      A CLRRAM CLR    ,--X     screen memory.
00831P 0024  30  01      A        LEAX   &1,X     (This roundabout method saves bytes
00832P 0026  26  FA   0022        BNE    CLRRAM   over the more obvious way.)
00833P 0028  BD  06DC    P        JSR    GRNCHR   Clear the screen and make X point to
00834                      *    the first byte following the screen
00835                      *    memory.
00836                             ENDC   IFN      REALIO
00837             0001   A        IFEQ   REALIO
00839                       ENDC   IFE REALIO
00840P 002B  6F   80     A        CLR    ,X+      Put a zero below TXTTAB and set it
00841P 002D  9F   19     A        STX    TXTTAB   up.
00842
00843                      *
00844                      * Here to find the top of RAM.
00845                      *
00846
00847            0001    A        IFNE   REALIO
00848P 002F A6   02      A MEMLOP LDA    &2,X     Get byte from memory.
00849P 0031 43                    COMA            Invert all  the bits.
00850P 0032 A7   02      A        STA    &2,X     Store the complement.
00851P 0034 A1   02      A        CMPA   &2,X     Did it store OK?
00852P 0036 26   06   003E        BNE    HAVEND   No, this byte is not useable RAM.
00853P 0038 30   01      A        LEAX   &1,X     Yes, bump the address.
00854P 003A 63   01      A        COM    &1,X     Restore the original contents.
00655P 003C 20   F1   002F        BRA    MEMLOP   Look at the next byte.
00856                             ENDC   IFN      REALIO
00857
00658            0001    A        IFEQ   REALIO
00861                       ENDC   IFE REALIO
00862P 003E 9F   74      A HAVEND STX    ENDMEM   Set pointer to end of memory.  Don't
00863                      *    use last good byte so VAL trick will
00864                      *    work OK in the degenerate case.
00865P 0040 9F   27      A        STX    MEMSIZ   Mark end of BASIC's memory.
00666P 0042 9F   23      A        STX    FRETOP   This is the end of string space also.
00867P 0044 30   89 FF38 A        LEAX   -STRSPC,X Set the bottom of string space.
00868P 0048 9F   21      A        STX    STKTOP   This is the top of the stack.
00869P 004A 1F   14      A        TFR    X,S      Switch from temp stack to BASIC's
00870                      *    real stack.
00871P 004C BD   0000    A        JSR    SFTINI   Init the I/O driver routines.
00872            0001    A        IFNE   REALIO
00873P 004F 8E   00EC    P        LDX    #LORAM   Initialize direct page RAM.
00874P 0052 CE   009D    A        LDU    #EXECAD
00875P 0055 C6   0E      A        LDB    #NLORAM
00676P 0057 BD   0431    P        JSR    COPLOP
00877P 005A CE   0000    A        LDU    #VIRQ    Initialize RAM off the direct page.
00878P 005D C6   1E      A        LDB    #NHIRAM
00879P 005F BD   0431    P        JSR    COPLOP
00880P 0062 8E   0000    A        LDX    #SNERR   X:=SNERR for intializing the dispatch
00881                      *    addresses of stub 1.
00882                             ENDC   IFN      REALIO
00863            0001    A        IFEQ   REALIO
00890                       ENDC   IFE REALIO

