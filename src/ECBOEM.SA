       NAM    IODRVR
       OPT    REL,LLE=120
       TTL    I/O DRIVER EQUATES
*
* I/O DEVICE ADDRESS EQUATES
*
* CONVENTIONS USED:
*
* DDR = DATA DIRECTION REGISTER
* PDR = PERIPHERAL DATA REGISTER
* CR  = CONTROL REGISTER
* A   = A-SIDE OF PIA
* B   = B-SIDE OF PIA
* E.G.  P0CRA = CONTROL REGISTER FOR A-SIDE OF PIA SELECTED BY P0
* PIA ADDRESS EQUATES FOLLOW
       XREF   VFIRQ,VIRQ,VNMI,VSWI,VSWI2,VSWI3,XRSLWC,FCERR
*
* P0 PIA
*
P0DDRA EQU    $FF00
P0PDRA EQU    P0DDRA
P0CRA  EQU    P0DDRA+1
P0DDRB EQU    P0DDRA+2
P0PDRB EQU    P0DDRB
P0CRB  EQU    P0DDRB+1
*
* RS232  6551 CHIP
*
RSTXD  EQU    $FF04
RSRXD  EQU    RSTXD
RSSTAT EQU    $FF05
RSCMD  EQU    $FF06
RSCNT  EQU    $FF07
*
* P1 PIA
*
P1DDRA EQU    $FF20
P1PDRA EQU    P1DDRA
P1CRA  EQU    P1DDRA+1
P1DDRB EQU    P1DDRA+2
P1PDRB EQU    P1DDRB
P1CRB  EQU    P1DDRB+1
*
* SAM CHIP EQUATES
*
SAMCR  EQU    $FFC0    BASE ADDRESS OF SAM CONTROL REGISTER
SAMF1S EQU    $FFC9    F1 SET ADDRESS
SAMMOS EQU    $FFDB    M0 SET ADDRESS
SAMM1S EQU    $FFDD    M1 SET ADDRESS
SAMTYC EQU    $FFDE    MAP TYPE CLEAR ADDRESS
SAMTYS EQU    $FFDF    "   "    SET     "
*
* ADDRESSES OF I/O DRIVER RAMS FOLLOW
*
PWIDTH EQU    $82      PULSE WIDTH COUNTER
BITCNT EQU    $83      BIT COUNTER (SYNC BITS NORMALLY)
BPFLAG EQU    $84      BIT PHASE FLAG
LSTSIN EQU    $85      LAST SINE TABLE ENTRY TO BE OUTPUT
CURADR EQU    $88      CURRENT CURSOR ADDRESS IN 88,89
CBLCNT EQU    $8F      CURRENT CURSOR BLINK COUNT
LDRCNT EQU    $90      COUNT OF NUMBER OF LEADER BYTES
MIN0WD EQU    $92      MINIMUM CYCLE WIDTH OF 1200 HZ (IN PWIDTHS)
MIN0PW EQU    $93      "    PULSE   "   "    "  "   "     "
MAX0PW EQU    $94      MAXIMUM   "     "   "    "      "     "
MODLAY EQU    $95      CASSETTE MOTOR DELAY VALUE
KBDLAY EQU    $97      KEYBOARD DEBOUNCE DELAY VALUE
LPTCFW EQU    $99      LINE PRINTER COMMA FIELD WIDTH
LPTLCF EQU    $9A      "     "    LAST COMMA FIELD
LPTWID EQU    $98      "     "    WIDTH
LPTPOS EQU    $9C      "     "    CURRENT CHARACTER POSITION
LSTKEY EQU    $011D    ASCII OF KEY CURRENTLY PRESSED
CNTDWN EQU    $011E    COUNTDOWN TO KEYBOARD REPEAT
RPTDLY EQU    $011F    INTER-REPEAT INTERRUPT COUNT
AUTOLF EQU    $0148    BUFFER FULL AUTO LINE FEED FLAG
ALLOCK EQU    $0149    ALPHA LOCK FLAG
EOLSEQ EQU    $014A    LINE PRINTER EOL TERMINATOR SEQUENCE
KBROLL EQU    $0151    KEYBOARD ROLLOVER PATTERN TABLE
POTVAL EQU    $015A    START ADDRESS OF JOYSTICK READINGS
LDELAY EQU    $03FD    DELAY AFTER END OF PRINTING LINE
PRNFLG EQU    $03FF    SERIAL OR PARRALLEL PRINT FLAG
*
* CONSTANT VALUES FOLLOW
*
ON     EQU    $FF      ON VALUE
TRUE   EQU    ON       TRUE VALUE
OFF    EQU    $00      OFF VALUE
FALSE  EQU    OFF      FALSE VALUE
* CHARACTER CONSTANTS
SP     EQU    $20      SPACE
CR     EQU    $0D      CARRIAGE RETURN
LF     EQU    $0A      LINE FEED
BS     EQU    $08      BACK SPACE
INVSP  EQU    $60      INVERTED SPACE
SHIFT0 EQU    $12      SHIFTED 0 SPECIAL CASE
*
* MISC CONSTANTS
*
SYNCNT EQU    $60      NUMBER OF BITS TO MAKE UP VALID SYNC DETECT
HOMPOS EQU    $0400    HOME POSITION OF SCREEN VIDEO RAM
EOSPOS EQU    $05FF    END      "    "     "     "    "
BLPOS  EQU    $05E0    START OF LAST LINE ON SCREEN
LWIDTH EQU    $84      LINE WIDTH OF PRINTER
LCFW   EQU    $10      COMMA FIELD WIDTH
LLCF   EQU    LWIDTH-LCFW LAST COMMA FIELD
COLS   EQU    $08      NUMBER OF COLUMNS IN KB MATRIX
MSEC10 EQU    $045E    10 MILLISECOND DELAY VALUE
CBLVAL EQU    $32      CURSOR BLINK RATE CONSTANT
*
* END OF EQUATES
*
* START ADDRESS OF ROUTINES FOLLOWS
*
       TTL    I/O DRIVER SUBROUTINES
* I/O DRIVER SUBROUTINES FOLLOW:
*
* HDRINI - HARDWARE INITIALISATION ROUTINE
*
       RMB    $07      WASTE BYTES TO KEEP ADDRESSING COMPATABLE
       XDEF   OEMMEM
OEMMEM EQU    *
       XDEF   ZHRDIN
ZHRDIN EQU    *
HDRINI LDD    #$0034   A = DD BITS, B = CR BITS
       LDX    #P0DDRA  SET UP BASE ADDRESS OF P0PIA
       STA    1,X      RESET P0CRA
       STA    3,X      AND P0CRB
       STA    0,X      CONFIGURE P0DDRA FOR INPUTS
       COMA            (A) = $FF
       STA    2,X      AND P0DDRB AS OUTPUTS
       STB    1,X      SET UP P0CRA & P0CRB - INTERRUPTS DISABLED
       STB    3,X      -VE EDGE ON CA1/CB1 & CA2/CB2 IN CR3 FOLLOW
       LDX    #P1D0RA  READY TO CONFIGURE P1PIA
       CLR    1,X      RESET P1CRA
       CLR    3,X      AND P1CRB
       DECA            (A) = $FE SETS PA0 AS INPUT, REST OUTPUTS
       STA    0,X      DDRA SETUP
       LDA    #$F8
       STA    2,X      PB0,PB1,PB2 INPUTS, REST OUTPUTS
       STB    1,X      CONFIGURE P1CR'S SAME AS P0CR'S
       STB    3,X
       CLR    0,X      RESET DAC AND PRINTER STROBE
       CLR    2,X      RESET VDG MODE LINES
       LDD    #$0A98
       STD    RSCMD    SET UP CONTROL/COMMAND REG.S
       LDA    RSRXD    CLEAR RECEIVE DATA BUFFER
* NOW INITIALISE THE SAM CHIP
       LDX    #SAMCR   SET UP BASE ADDRESS OF SAM'S CR
       LDB    #16      COUNT OF BITS IN CR OF SAM
SAMCLR STA    0,X++    ACCESS EVERY EVEN ADDRESS
       DECB            CLEARING ALL CR BITS
       BNE    SAMCLR
       STB    SAMF1S   SETS F1 BIT IN SAM CR
       STB    SAMM1S   SELECTS 64K RAM OPTION
       BRA    SAMEND   DON'T INITIALISE 48K SOFTWARE

       XDEF   ENTR48
ENTR48 JMP    BOOT64

SAMEND CLRB
       TFR    B,DP     CLEARS THE DP REG
       TFR    Y,PC     TRANSFER CONTROL TO ADDRESS IN IY
*
* SFTINI - SOFTWARE INITIALISATION ROUTINE
*
       XDEF   ZSFTIN
ZSFTIN EQU    *
SFTINI LDX    #NZDATA  GET READY TO COPY NON-ZERO TABLE ENTRIES
       LDU    #CBLCNT  INTO RAM BLOCK STARTING AT CBLCNT
       LDB    #13      (B) = COUNT OF BYTES TO COPY
       BSR    NZCOPY   INITIATE COPYING
       JSR    SFTIN2   PATCH FOR SERIAL PRINTER
       LDB    #9       AND IS 9 BYTES IN LENGTH
NZCOPY LDA    0,X+     GET TABLE DATA
       STA    0,U+     AND COPY TO RAM AREA
