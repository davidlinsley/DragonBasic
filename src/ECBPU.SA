       NAM    TXRPU    - PRINT USING for TCC Extension ROM.

**********************************************************************
*                                                                    *
*    Copyright 1982 by Microsoft Corporation, all rights reserved    *
*                                                                    *
**********************************************************************

       TTL    External Declarations

       XREF   CHKCOM,CHKSTR,CHROUT,CRDO
       XREF   DIV10
       XREF   FADDH,FBUFFR,FCERR,FDCEND,FMULT,FOUT,FOUTBL,FOUTCP,FRETMP
       XREF   FRMCHK,FRMEVL,FRMNUM
       XREF   LEFTUS
       XREF   MUL10
       XREF   N.0999,N.9999,N.MIL
       XREF   OUTSPC
       XREF   QINT
       XREF   STROUT,STRPRT,SYNCHR
       XREF   USINTK

       TTL    Equates

*
* The PRINT USING mask (PUMASK) bit definitions.
*

SCIFLG EQU    &1       Bit 0 - Scientific notation.
TRLFLG EQU    &4       Bit 2 - Trailing sign.
PLSFLG EQU    @10      Bit 3 - Print "+" instead of space
*      for positive numbers.
DOLFLG EQU    @20      Bit 4 - Floating dollar sign.
ASTFLG EQU    @40      Bit 5 - Asterisk fill.
COMFLG EQU    @100     Bit 6 - Insert commas.

FLTMON EQU    '$       Character to use for floating money
*    sign. Can be changed to a yen sign
*    for example.
MLCSTR EQU    '%       Character indicating a multi-char
*    string field. (For compatibility
*    with TRS-80 Model I Level II BASIC.

       TTL    The PRINT USING driver.

*
* Entered at PUTEST.
*

*
* Here to handle a string field.
*

SMSTRF LDA    #&1      Single char string field.
       STA    FLDWID
ISSTRF DECB            Decrement using string char count.
       JSR    PLSPRT   Print possible preceding plus.
       JSR    CHRGOT   End of value list reached?
       LBEQ   FLDFIN   Yes, PRINT USING is finished.
       STB    USSCNT   No, save using string char count.
       JSR    FRMEVL   Evaluate next value in the value list.
       JSR    CHKSTR   It must be a string to go into this
*    string field.
       LDX    FACMO    X:=pointer to the string descriptor.
       STX    DSCPNT   Set up DSCPNT for LEFT$ code.
       LDB    FLDWID   B:=width of string field.
       JSR    LEFTUS   Get leftmost B chars or whole string
*    if it's shorter than the field.
       JSR    STRPRT   Print the string.
       LDX    FACMO    See if spaces are needed to fill out
       LDS    FLDWID   the field.
       SUBB   ,X
UPRTSP DECB            More spaces to print?
       LBMI   FNSTRF   No, string field is finished.
       JSR    OUTSPC   Yes, print another one.
       BRA    UPRTSP   See if more.

*
* Here when MLCSTR is seen which indicates the start of a multi-char
* string field if it is followed by a variable number of spaces and
* another MLCSTR.
*

BGSTRF STB    USSCNT   Save the using string char count.
       STX    TEMPX1   Save the using string pointer.
       LDA    #&2      The field width is 2 for the MLCSTRs
       STA    FLDWID   plus the number of enclosed spaces.
LPSTRF LDA    ,X       Get next using string char.
       CMPA   #MLCSTR  End of the string field?
       BEQ    ISSTRF   Yes, go print the string.
       CMPA   #'       No, an enclosed space?
       BNE    NOSTRF   No, it isn't really a string field.
       INC    FLDWID   Yes, increment the field width.
       LEAX   &1,X     Point to the next using string char.
       DECB            Decrement using string char count.
       BNE    LPSTRF   Is there are more chars in the using
*    string then go scan them. Otherwise
*    the closing MLCSTR wasn't found and
*    therefore we aren't really looking
â€¢    at a string field.
NOSTRF LDX    TEMPX1   It isn't a string field so restore the
       LDB    USSCNT   using string pointer and char count.
       LDA    #MLCSTR  Just print the MLCSTR since it doesn't
*    belong to a field.
NEWUCH JSR    PLSPRT   Print possible preceding plus since
*    it didn't start a numeric field.
       JSR    CHROUT   Now print the current char since it
*    isn't part of a field.
       BRA    PRCCHR   Go look at the next using string char.
